// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token_expires_in Int?
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  game          Game?     @relation(references: [id], fields: [gameId])
  gameId        String?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Hero {
  id                Int            @id @default(autoincrement())
  name              String         @unique
  primary_attr      HeroAttribute
  attack_type       HeroAttackType
  roles             HeroRole[]
  img               String         @unique
  icon              String         @unique
  base_health       Int
  base_health_regen Float
  base_mana         Int
  base_mana_regen   Float
  base_armor        Float
  base_mr           Int
  base_attack_min   Int
  base_attack_max   Int
  base_str          Int
  base_agi          Int
  base_int          Int
  str_gain          Float
  agi_gain          Float
  int_gain          Float
  attack_range      Int
  projectile_speed  Int
  attack_rate       Float
  move_speed        Int
  turn_rate         Float
  cm_enabled        Boolean
  legs              Int
}

enum HeroAttribute {
  AGILITY
  STREIGHT
  INTELLECT
}

enum HeroAttackType {
  MELEE
  RANGE
}

enum HeroRole {
  CARRY
  ESCAPE
  NUKER
  INITIATOR
  DURABLE
  DISABLER
  JUNGLER
  SUPPORT
  PUSHER
}

model Game {
  id       String    @id @default(cuid())
  state    GameState @default(INITIALIZE)
  users    User[]
  started  DateTime  @default(now())
  finished DateTime?
}

enum GameState {
  INITIALIZE
  IN_PROGRESS
  PROCESSED
  FINISHED
}
